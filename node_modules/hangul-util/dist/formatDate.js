"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatDate = formatDate;
var _utils = require("./utils");
var _constant = require("./constant");
var DATE_REGEXER = /Y{2,4}|M{1,2}|D{1,2}|d{1,2}|H{1,2}|m{1,2}|s{1,2}/g;

/**
 * @example
 * YY - 22, YYYY - 2022
 * M: 2, MM: 02,
 * D: 2, DD: 02,
 * d: 3, dd: '화',
 * H: 2, HH: 02,
 * m: 2, mm: 02,
 * s: 2, ss: 02,
 */
function formatDate() {
  var _date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();
  var formatStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "YYYY년MM월DD일 HH시mm분ss초";
  var date = new Date(_date);
  var year = (0, _utils.zeroPad)(date.getFullYear(), 4, "0");
  var month = date.getMonth() + 1;
  var day = date.getDate();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();
  var week = date.getDay();
  function matcher(match) {
    return {
      YY: year.slice(-2),
      YYYY: year,
      M: month,
      MM: (0, _utils.zeroPad)(month, 2, "0"),
      D: day,
      DD: (0, _utils.zeroPad)(day, 2, "0"),
      d: week,
      dd: _constant.WEEK_DAY[week],
      H: hour,
      HH: (0, _utils.zeroPad)(hour, 2, "0"),
      m: minute,
      mm: (0, _utils.zeroPad)(minute, 2, "0"),
      s: second,
      ss: (0, _utils.zeroPad)(second, 2, "0")
    }[match] || match;
  }
  return formatStyle.replace(DATE_REGEXER, matcher)
  // "년년" 방지 -> "년"
  .replace(/(년|월|일|시|분|초{1})(년|월|일|시|분|초{1})+/g, "$1").replace(/\s+/g, " ");
}