"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatNumber = formatNumber;
exports.formatNumberAll = formatNumberAll;
var _utils = require("./utils");
var _constant = require("./constant");
function formatNumber() {
  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  if (!(0, _utils.isNumber)(Number(format))) {
    return "";
  }
  return (0, _utils.chunkAtEnd)(String(format), 4).reduce(function (acc, item, index) {
    var _thousandUnits$index;
    var unit = (_thousandUnits$index = _constant.thousandUnits[index]) !== null && _thousandUnits$index !== void 0 ? _thousandUnits$index : "";
    if (!Number(item)) {
      return acc;
    }
    return "".concat(Number(item)).concat(unit, " ").concat(acc);
  }, "").trim();
}
function formatNumberAll() {
  var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  if (!(0, _utils.isNumber)(Number(format))) {
    return "";
  }
  return (0, _utils.chunkAtEnd)(String(format), 4).reduce(function (acc, item, index) {
    var _thousandUnits$index2;
    if (!Number(item)) {
      return acc;
    }
    var numberUnit = "";
    var zeroItem = (0, _utils.zeroPad)(item, 4);
    for (var i = 0; i < 4; i++) {
      var number = Number(zeroItem[i]);
      if (number) {
        var unit = _constant.tenUnits[3 - i];
        numberUnit += "".concat(unit && number === 1 ? "" : _constant.numberUnits[number]).concat(unit);
      }
    }
    var thousandUnit = (_thousandUnits$index2 = _constant.thousandUnits[index]) !== null && _thousandUnits$index2 !== void 0 ? _thousandUnits$index2 : "";
    return "".concat(numberUnit).concat(numberUnit ? thousandUnit : "", " ").concat(acc);
  }, "").trim();
}