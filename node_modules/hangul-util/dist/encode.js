"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.decode = decode;
exports.encode = encode;
var _utils = require("./utils");
var a = [escape, function (t) {
  return (0, _utils.chunkAtEnd)((0, _utils.chunkAtEnd)(t).join(""), 3).join("");
}, function (t) {
  return (0, _utils.chunkAtEnd)((0, _utils.chunkAtEnd)(t).join(""), 4).join("");
}, function (t) {
  return (0, _utils.chunkAtEnd)(t).join("");
}, function (t) {
  return t.split("").map(function (v, i) {
    return i % 3 === 0 ? v + w() : v;
  }).join("");
}, function (t) {
  return t.slice(Math.floor(t.length / 2), t.length) + t.slice(0, Math.floor(t.length / 2));
}];
var s = JSON.stringify;
var b = btoa;
var e = encodeURI;
var w = function w() {
  return Math.floor(Math.random() * a.length);
};
function encode() {
  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var _t = w();
  var c = l % 3 === 0 ? b(e(s(t))) : a[_t](t);
  return l === 5 ? _t + b(e(c)) : encode((l % 2 === 1 ? _t : "") + c + (l % 2 === 0 ? _t : ""), l + 1);
}
var n = [unescape, function (t) {
  return (0, _utils.chunkAtEnd)((0, _utils.chunkAtEnd)(t).join(""), 3).join("");
}, function (t) {
  return (0, _utils.chunkAtEnd)((0, _utils.chunkAtEnd)(t).join(""), 4).join("");
}, function (t) {
  return (0, _utils.chunkAtEnd)(t).join("");
}, function (t) {
  return t.split("").map(function (v, i) {
    return (i - 1) % 4 === 0 ? "" : v;
  }).join("");
}, function (t) {
  return t.slice(Math.ceil(t.length / 2), t.length) + t.slice(0, Math.ceil(t.length / 2));
}];
var x = atob;
var d = decodeURI;
var p = JSON.parse;
function decode() {
  var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
  var l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;
  var _t = l % 2 === 1 ? [t.slice(1, t.length), t[0]] : [t.slice(0, t.length - 1), t[t.length - 1]];
  var h = l === 5 ? d(x(_t[0])) : _t[0];
  var c = l % 3 === 0 ? p(d(x(h))) : n[_t[1]](h);
  return l === 0 ? c : decode(c, l - 1);
}